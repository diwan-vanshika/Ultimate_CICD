pipeline {
  agent {
    docker {
      image 'diwanvanshika/ultimate-cicd-pipeline:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/diwan-vanshika/Ultimate_CICD.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'cd Ultimate_CICD/spring-boot-app && mvn clean package'
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://52.90.148.92:9000/"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd Ultimate_CICD/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "ultimate-cicd-pipeline:${BUILD_NUMBER}"
      }
      steps {
        script {
          sh 'cd Ultimate_CICD/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
              dockerImage.push()
          }
          sh "docker rmi ${DOCKER_IMAGE}" // Optional: Remove the local image after pushing to the registry
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Ultimate_CICD"
        GIT_USER_NAME = "diwan-vanshika"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          script {
            sh '''
              git config user.email "diwan.vanshika.23@gmail.com"
              git config user.name "${GIT_USER_NAME}"
              sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" Ultimate_CICD/spring-boot-app-manifests/deployment.yml
              git add Ultimate_CICD/spring-boot-app-manifests/deployment.yml
              git commit -m "Update deployment image to version ${BUILD_NUMBER}"
              git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
            '''
          }
        }
      }
    }
  }
}